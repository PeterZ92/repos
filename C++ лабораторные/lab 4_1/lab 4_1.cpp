// lab 4_1.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//#include "pch.h"
#include <iostream>
#include <string>
#include <cmath>
#include<cstdlib>
#include<ctime>
using namespace std;


class Square
{
protected:
    double side;
public:
    Square()
    {
        side = 0;
    };
    Square(double s)
    {
        side = s;
    }
    void display()
    {
       
        cout << " Сторона равна: " << side << "  \n";
        cout << " Площадь равна: " << square() << " (для проверки)  \n";
        cout << " Периметр равен: " << per() << "  \n";
        cout << " Диагональ равна: " << diagon() << "  \n";
        
    }

    double per()// расчет периметра
    {
       return side* 4;
    }
    double square()// расчет площади
    {
        return side* side;
    }
    double diagon()// расчет диагонали
    {
        return side * 1.41421356237;
    }
    ~Square()
    {};
};

class Cube : public Square
{
public:
    Cube() : Square()
    { }
   Cube(double a ): Square( a)
    { }
    double vol()//расчет объема
    {
       return side * side *side;
    }
    double per()// расчет периметра
    {
        return side * 12;
    }
    double square()// расчет площади
    {
        return side * side * 6;
    }
    void display()
    {
        cout <<"  Сторона равна: "<< side << "  \n";
        cout << " Объем равна: " << vol() << "  \n";
        cout << " Периметр равен: " << per() << "  \n";
        cout << " Площадь равна: " << square() << " (для проверки)  \n";
        cout << " Диагональ грани равна: " << diagon() << "  \n";

    }

    ~Cube()
    {}
};



int main()
{
    srand(time(NULL));
    
    setlocale(LC_ALL, "Russian");

    cout << " Введите кол-во квадратов! \n";
    int q_sq ;//Введите кол-во квадратов
    cin >> q_sq;
    cout << " Введите кол-во кубов! \n";
    int c_sq;//Введите кол-во кубов
    cin >> c_sq;
//переменные для квадрата********************************************************
    double* summ = new double[q_sq];// динам массив хранения площ квадратов
    double w;// переменная для цикла ( w= .....->square())
    double square_summ=0;// переменная для хранения суммы квадратов
    double square_middle = 0;// переменная для хранения средней суммы квадратов
    square_middle = square_summ / q_sq;// переменная c выражением для хранения средней суммы квадратов
//переменные для куба **********************************************************
    double* m_cube = new double[c_sq];// динам массив хранения площ квадратов
    double e;// переменная для цикла ( e= .....->square())
    //double square_summ = 0;// переменная для хранения суммы квадратов
    //double square_middle = 0;// переменная для хранения средней суммы квадратов
    square_middle = square_summ / q_sq;// переменная c выражением для хранения средней суммы квадратов

                                       
// цикл создания площадей с использ класса квадрат********************************* 
    for (int i = 0; i < q_sq; i++)
    {
        
        Square* s = new Square(1+rand() % 10);
        s;
        w = s->square()  ;
       s->display();// для проверки!!!!!!
        
        summ[i]=w;
        cout << " ******Площадь  квадрата: № "<< i+1 <<" = " << w << "***** \n\n ";
      
    }
// цикл конец**********************************************************************

// цикл суммирования площадей квадрата*********************************************
    for (int i = 0; i < q_sq; i++)
    {
        //cout << summ[i] << " ";// для проверки!!!!!!
        square_summ = square_summ + summ[i];
    }
   
// цикл конец**********************************************************************
    cout << " \n Сумма площадей квадратов ровна: " << square_summ << " \n"
        << " \n Средня сумма площадей квадратов ровна: " << square_summ / q_sq << " \n";
    cout << " \n************************ Ниже параметры кубов******************************************\n";
    delete[] summ;// удаление summ
 // цикл создания площадей с использ класса куб************************************
    for (int i = 0; i < c_sq; i++)
    {
        Cube* c = new Cube(1 + rand() % 10);
        c;
        e = c->square();
        c->display(); // для проверки!!!!!!
        m_cube[i] = e;
        cout << " ******Площадь  куба: № " << i + 1 << " = " << e << "****** \n\n ";
    }
// цикл конец**********************************************************************
    cout << "\n";
// цикл поиска макс площ куба************************************
    double max = m_cube[0];
    for (int i = 0; i < c_sq; i++)
    {
        if (m_cube[i] > max)
            max = m_cube[i];
 
    }
    cout<<" Макс. площадь куба = " << max<<"\n";
// цикл конец**********************************************************************
// цикл кол-ва макс кубов**********************************************************************   
    int repeat=0;
    for (int i = 0; i < c_sq; i++)
    {
        if (m_cube[i] == max)
        {
            repeat+=1;
        }
    }

    cout << " Кол-во кубов с макс площадью = " << repeat++ <<"\n";
// цикл конец**********************************************************************
    delete[] m_cube;// удаление  m_cube
 
}


